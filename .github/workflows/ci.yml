name: ci

on: [push]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: |
          pipenv install --deploy --dev

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel

    - id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: Analysing the code with flake8
      run: |
        pipenv run lint-flake8
#
#  unittest:
#    name: Unittest
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#
#      - name: Install pipenv
#        run: |
#          python -m pip install --upgrade pipenv wheel
#
#      - name: Install dependencies
#        run: |
#          pipenv install --deploy --dev
#
#      - name: Running temporary test
#        run: |
#          pipenv run unittest
#
#  integrationtest:
#    name: Integrationtest
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#
#      - name: Install pipenv
#        run: |
#          python -m pip install --upgrade pipenv wheel
#
#      - name: Install dependencies
#        run: |
#          pipenv install --deploy --dev
#
#      - name: Running temporary test
#        run: |
#          pipenv run integrationtest
#
