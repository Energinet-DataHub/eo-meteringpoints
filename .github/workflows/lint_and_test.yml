name: Lint and Test

env:
  python-version: 3.8
  cache-directory: ~/.local/share/virtualenvs

on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch: {}

jobs:
  build:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install Python packages
        run: pip install --upgrade pip setuptools wheel pipenv

      - uses: actions/cache@v1
        id: cache
        with:
          path: ${{ env.cache-directory }}
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}-9

      - name: Install Pipenv dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pipenv update --dev

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}

    - name: Install Python packages
      run: pip install --upgrade pip setuptools wheel pipenv

    - uses: actions/cache@v1
      with:
        path: ${{ env.cache-directory }}
        key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}-9

    - name: Analysing the code with flake8
      run: pipenv run flake8
      working-directory: ./

  unittest:
    name: Unittest
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install Python packages
        run: pip install --upgrade pip setuptools wheel pipenv

      - uses: actions/cache@v1
        with:
          path: ${{ env.cache-directory }}
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}-9

      - name: Run unittests
        run: pipenv run pytest tests/unittest/

  integrationtest:
    name: Integrationtest
    needs: unittest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install Python packages
        run: pip install --upgrade pip setuptools wheel pipenv

      - uses: actions/cache@v1
        with:
          path: ${{ env.cache-directory }}
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}-9

      - name: Run integrationtest
        run: pipenv run pytest tests/integrationstest/
